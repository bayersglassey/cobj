
def x: 1
def y: 2


module [local.test]

def f: 1 2
def g: ='z


module []
def z: 3

from [local.test]: f

def test:
    1 ='x
    2 ='y
    :
        'x 'y + ='z
    "lalala! " str_p 'z p
    p_stack
    p_vars

    1 1 == assert
    1 1 < not assert
    1 1 <= assert
    1 2 < assert
    1 2 != assert
    1 2 == not assert
    T assert
    F not assert

    1 1 - 0 == assert
    1 1 + 2 == assert
    6 3 / 2 == assert
    2 3 * 6 == assert

    struct: x y z
    T =.y
    struct(a b) "A" =.a "B" =.b =.z
    ='s

    "s: " str_p 's p
    "s.z: " str_p 's .z p

    #'z @@[]z == assert

    #@f 2 == assert 1 == assert

    #10 @g
    #'z 3 == assert

    return
